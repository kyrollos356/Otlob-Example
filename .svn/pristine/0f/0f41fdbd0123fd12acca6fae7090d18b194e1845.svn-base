
package com.poet.ordering.system.servlets.users;

import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Paths;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import com.poet.ordering.system.model.User;
import com.poet.ordering.system.service.UserServiceImp;

@WebServlet("/EditProfileServlet")
@MultipartConfig
public class EditProfileServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private UserServiceImp userService = UserServiceImp.getInstance();

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		User user = new User();
		String id = "1";
		try {
			user = userService.findbyID(id);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		request.setAttribute("fullname", user.getFullname()); // set fields with user data
		request.setAttribute("email", user.getEmail());
		request.setAttribute("skypeID", user.getSkypeID());
		request.setAttribute("duplicateEmail", "");

		request.getRequestDispatcher("editProfile.jsp").forward(request, response);

	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		User user = new User();
		user.setEmail(request.getParameter("email"));
		user.setFullname(request.getParameter("fullname"));
		user.setSkypeID(request.getParameter("skypeID"));
		user.setId(1);
		Part filePart = request.getPart("image");
		String fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString();
		if (!fileName.isEmpty()) {

			InputStream fileContent = filePart.getInputStream();
			user.setPicture("D://usersProfileImages//" + fileName);
			filePart.write("D://usersProfileImages//" + fileName);
		}

		boolean duplicateUsername = true;
		try {
			duplicateUsername = userService.editUserProfile(user);
			// user = userService.findByEmailAndPassword(user);
		} catch (Exception e) {

			e.printStackTrace();
		}

		if (duplicateUsername) {
			request.setAttribute("fullname", user.getFullname());

			request.setAttribute("skypeID", user.getEmail());

			request.setAttribute("duplicateEmail", "email or skypeID already assigned to account!");

			request.getRequestDispatcher("signup.jsp").forward(request, response);
		} else {
			request.setAttribute("user", user);
			request.getRequestDispatcher("home.jsp").forward(request, response);
		}
	}

}
