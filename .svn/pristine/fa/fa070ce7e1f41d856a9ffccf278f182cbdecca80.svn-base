package com.poet.ordering.system.servlets.orders;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.poet.ordering.system.model.Order;
import com.poet.ordering.system.model.OrderRequest;
import com.poet.ordering.system.service.OrderRequestServiceImp;
import com.poet.ordering.system.service.OrderServiceImp;


/**
 * Servlet implementation class OrderServlet
 */
@WebServlet("/OrderServlet")
@MultipartConfig
public class OrderServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private OrderServiceImp orderService = OrderServiceImp.getInstance();
	private OrderRequestServiceImp orderRequestService = OrderRequestServiceImp.getInstance();
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public OrderServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			List<Order> listOrders = orderService.viewAllOrders(2);
			request.setAttribute("listOrders", listOrders);
			OrderRequest orderRequest = orderRequestService.getOrderRequest(14);
			request.setAttribute("orderRequest", orderRequest);
			String closeRequestButton = "";
			if(orderRequest.getStatus().equals("Open")) {
				closeRequestButton = "Close Request";
			}
			if(orderRequest.getStatus().equalsIgnoreCase("Closed")) {
				closeRequestButton = "Archive Request";
			} else {
				closeRequestButton = "";
			}
			request.setAttribute("closeRequestButton", closeRequestButton);
		} catch (Exception e) {
			e.printStackTrace();
		}
		request.getRequestDispatcher("/jsp/order/orderRequest.jsp").forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		addOrder(request, response);
		doGet(request, response);
	}
	
	private void addOrder(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Order order = new Order();
		if (request.getParameter("content") != "") {
		order.setContent(request.getParameter("content"));
		order.setUserId(5);
		order.setOrderRequestId(2);
		try {
			orderService.addNewOrder(order);
		} catch (Exception e) {
			e.printStackTrace();
		}
		}
	}

}
