package com.poet.ordering.system.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.poet.ordering.system.connection.ConnectionManager;
import com.poet.ordering.system.model.Restaurant;

public class RestaurantDAOImp implements RestaurantDAO{

	public void insertRestaurant(Restaurant restaurant) throws Exception{

		ConnectionManager connectionManager = new ConnectionManager();
		Connection connection = connectionManager.getConnection();

		String insertRestaurant = "INSERT INTO restaurant (`Name`, `Menu_url`, `Menu_image`, `User_id`) VALUES ('"
				+ restaurant.getName() + "', '" + restaurant.getMenuUrl() + "', '" + restaurant.getMenuImage() + "', '"
				+ restaurant.getUserId() + "');";

		PreparedStatement preparedStatement;
		try {
			preparedStatement = connection.prepareStatement(insertRestaurant);
			preparedStatement.executeUpdate();
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	public void editRestaurant(Restaurant restaurant) throws Exception{

		ConnectionManager connectionManager = new ConnectionManager();
		Connection connection = connectionManager.getConnection();

		String editRestaurant = "UPDATE restaurant SET name = "+ restaurant.getName() + ", Menu_url = " + restaurant.getMenuUrl() + "WHERE Restaurant_id = " + restaurant.getId();

		PreparedStatement preparedStatement;
		try {
			preparedStatement = connection.prepareStatement(editRestaurant);
			preparedStatement.executeUpdate();
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	public void deleteRestaurant(int id) throws Exception{

		ConnectionManager connectionManager = new ConnectionManager();
		Connection connection = connectionManager.getConnection();

		String deleteRestaurant = "DELETE FROM restaurant WHERE Restaurant_id = " + id;
		String deleteAddresses = "DELETE FROM addresses WHERE Restaurant_id = " + id;
		String deletePhones = "DELETE FROM phone WHERE Restaurant_id = " + id;
		String deleteTags = "DELETE FROM tag WHERE Restaurant_id = " + id;

		PreparedStatement preparedStatement;
		PreparedStatement preparedStatement1;
		PreparedStatement preparedStatement2;
		PreparedStatement preparedStatement3;
		try {
			preparedStatement = connection.prepareStatement(deleteAddresses);
			preparedStatement1 = connection.prepareStatement(deletePhones);
			preparedStatement2 = connection.prepareStatement(deleteTags);
			preparedStatement3 = connection.prepareStatement(deleteRestaurant);
			preparedStatement.executeUpdate();
			preparedStatement1.executeUpdate();
			preparedStatement2.executeUpdate();
			preparedStatement3.executeUpdate();
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	public List viewAllRestaurants() throws Exception{
		List<Restaurant> restaurantList = new ArrayList<>();

		ConnectionManager connectionManager = new ConnectionManager();
		Connection connection = connectionManager.getConnection();

		String viewAllRestaurants = "SELECT * from restaurant";

		Connection conn = connectionManager.getConnection();
//		PreparedStatement preparedStatement;
		Statement stmt = null;
		stmt = conn.createStatement();
		try {
			ResultSet rs = stmt.executeQuery(viewAllRestaurants);
			while(rs.next()){
		         int id  = rs.getInt("Restaurant_id");
		         String name = rs.getString("Name");
		         String menuURL = rs.getString("Menu_url");
		         
		         Restaurant restaurant = new Restaurant();
		         restaurant.setId(id);
		         restaurant.setName(name);
		         restaurant.setMenuUrl(menuURL);
		         
		         restaurantList.add(restaurant);
		     }
//			preparedStatement = connection.prepareStatement(insertRestaurant);
//			preparedStatement.executeUpdate();
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return restaurantList;

	}

	@Override
	public Restaurant getRestaurant(int id) throws Exception {
		ConnectionManager connectionManager = new ConnectionManager();
		Connection connection = connectionManager.getConnection();
		Restaurant restaurant = new Restaurant();
		String viewRestaurant = "SELECT * from restaurant where Restaurant_id = " + id;
		
		Connection conn = connectionManager.getConnection();
//		PreparedStatement preparedStatement;
		Statement stmt = null;
		stmt = conn.createStatement();
		
		ResultSet rs = stmt.executeQuery(viewRestaurant);
		while(rs.next()){
//	         int id  = rs.getInt("Restaurant_id");
	         String name = rs.getString("Name");
	         String menuURL = rs.getString("Menu_url");
	         
	         restaurant.setId(id);
	         restaurant.setName(name);
	         restaurant.setMenuUrl(menuURL);
	     }
		return restaurant;
	}

}
