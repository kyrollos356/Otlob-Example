package com.poet.ordering.system.servlets.users;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.poet.ordering.system.model.User;
import com.poet.ordering.system.service.UserServiceImp;

/**
 * Servlet implementation class dummySevlet
 */
@WebServlet("/AllUsersAdmin")
public class AllUsersAdminSevlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private UserServiceImp userServiceImp = UserServiceImp.getInstance();

	public AllUsersAdminSevlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	public HttpServletRequest displayAllUsers(User user, HttpServletRequest request) {

		List<User> allSubscribers = new ArrayList<User>();
		allSubscribers = userServiceImp.selectSubscribers(user);

		List<User> allUnsubscribers = new ArrayList<User>();
		allUnsubscribers = userServiceImp.selectUnsubscribers(user);

		request.setAttribute("Subscribers", allSubscribers);
		request.setAttribute("Unsubscribers", allUnsubscribers);

		return request;

	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		User user = new User();
		// To Do get id of user logged in from JSP
		user.setId(1);

		request = displayAllUsers(user, request);
		request.getRequestDispatcher("allUsersAdmin.jsp").forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		User otherUser = new User();

		otherUser.setId(Integer.parseInt(request.getParameter("idfromAdminJSP")));
		String deleteOrNot = (String) request.getParameter("DeleteFromAdminJSP");

		if (deleteOrNot != null)
			userServiceImp.adminDeleteUserById(otherUser);

		User userProfile = new User();
		// TO DO get id from jsp
		userProfile.setId(1);
		String subscriberOrUnsubscriber = (String) request.getParameter("SubscriberOrUnsubscriber");

		if (subscriberOrUnsubscriber != null) {
			if (subscriberOrUnsubscriber.equals("Subscribe"))
				userServiceImp.insertInSubscription(userProfile, otherUser);
			else
				userServiceImp.deleteFromSubscription(userProfile, otherUser);
		}

		request = displayAllUsers(userProfile, request);
		request.getRequestDispatcher("allUsersAdmin.jsp").forward(request, response);

	}

}
