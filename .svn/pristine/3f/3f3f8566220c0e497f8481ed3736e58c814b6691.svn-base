package com.poet.ordering.system.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.poet.ordering.system.connection.ConnectionManager;
import com.poet.ordering.system.model.Restaurant;
import com.poet.ordering.system.model.RestaurantReview;

public class RestaurantReviewDAOImp implements RestaurantReviewDAO {

	private static RestaurantReviewDAOImp instance;

	public static RestaurantReviewDAOImp getInstance() {
		if (instance == null) {
			instance = new RestaurantReviewDAOImp();
		}
		return instance;
	}

	public void InsertRestaurantReview(RestaurantReview restaurantReview) throws Exception {

		ConnectionManager connectionManager = new ConnectionManager();
		Connection connection = connectionManager.getConnection();

		String insertRestaurantReview = "INSERT INTO restaurant_review (Content,Rating,User_id,Restaurant_id) VALUES ('"
				+ restaurantReview.getContent() + "', '" + restaurantReview.getRating() + "', '"
				+ restaurantReview.getUserID() + "', '" + restaurantReview.getRestaurantID() + "');";

		PreparedStatement preparedStatement;
		try {
			preparedStatement = connection.prepareStatement(insertRestaurantReview);
			preparedStatement.executeUpdate();
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public ArrayList<RestaurantReview> selectAllRestaurantReviews(int restaurantID) throws Exception {
		ArrayList<RestaurantReview> restaurantReviews = new ArrayList<>();
		ConnectionManager connectionManager = new ConnectionManager();
		String viewAllRestaurantReviews = "SELECT Content , Rating , Date_of_creation , user.User_id , Full_name  from restaurant_review , user where Restaurant_id = "
				+ restaurantID + " and user.User_id = restaurant_review.User_id ORDER BY Date_of_creation DESC ";

		Connection conn = connectionManager.getConnection();
		Statement stmt = null;
		stmt = conn.createStatement();
		ResultSet rs = stmt.executeQuery(viewAllRestaurantReviews);

		try {
			while (rs.next()) {
				int userID = rs.getInt("user.User_id");
				int rating = rs.getInt("Rating");
				String content = rs.getString("Content");
				String Date_of_creation = rs.getString("Date_of_creation");
				String Full_name = rs.getString("Full_name");

				RestaurantReview restaurantReview = new RestaurantReview();
				restaurantReview.setUserID(userID);
				restaurantReview.setRating(rating);
				restaurantReview.setDate(Date_of_creation);
				restaurantReview.setContent(content);
				restaurantReview.setUserName(Full_name);
				restaurantReviews.add(restaurantReview);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (stmt != null)
					stmt.close();
			} catch (Exception se) {
				se.printStackTrace();
			}
			try {
				if (conn != null)
					conn.close();
			} catch (Exception se) {
				se.printStackTrace();
			}
			try {
				if (rs != null)
					rs.close();
			} catch (Exception se) {
				se.printStackTrace();
			}
		}
		return restaurantReviews;
	}
}
